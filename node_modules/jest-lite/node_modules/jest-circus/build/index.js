'use strict';

















var _state = require('./state'); /**
                                  * Copyright (c) 2014-present, Facebook, Inc. All rights reserved.
                                  *
                                  * This source code is licensed under the MIT license found in the
                                  * LICENSE file in the root directory of this source tree.
                                  *
                                  * 
                                  */const describe = (blockName, blockFn) => _dispatchDescribe(blockFn, blockName);describe.only = (blockName, blockFn) => _dispatchDescribe(blockFn, blockName, 'only');describe.skip = (blockName, blockFn) => _dispatchDescribe(blockFn, blockName, 'skip');

const _dispatchDescribe = (blockFn, blockName, mode) => {
  (0, _state.dispatch)({ blockName, mode, name: 'start_describe_definition' });
  blockFn();
  (0, _state.dispatch)({ name: 'finish_describe_definition' });
};

const _addHook = (fn, hookType) =>
(0, _state.dispatch)({ fn, hookType, name: 'add_hook' });
const beforeEach = fn => _addHook(fn, 'beforeEach');
const beforeAll = fn => _addHook(fn, 'beforeAll');
const afterEach = fn => _addHook(fn, 'afterEach');
const afterAll = fn => _addHook(fn, 'afterAll');

const test = (testName, fn) =>
(0, _state.dispatch)({ fn, name: 'add_test', testName });
const it = test;
test.skip = (testName, fn) =>
(0, _state.dispatch)({ fn, mode: 'skip', name: 'add_test', testName });
test.only = (testName, fn) =>
(0, _state.dispatch)({ fn, mode: 'only', name: 'add_test', testName });

module.exports = {
  afterAll,
  afterEach,
  beforeAll,
  beforeEach,
  describe,
  it,
  test };